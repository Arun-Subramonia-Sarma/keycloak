---
# Source: keycloakx/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
  namespace: default
  labels:
    helm.sh/chart: keycloakx-7.0.1
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/instance: keycloak
  replicas: 2
  serviceName: keycloak-headless
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config-startup: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        chronosphere.io/metrics-path: "/metrics"
        chronosphere.io/owner: "poc"
        chronosphere.io/port: "8080"
        chronosphere.io/scheme: "http"
        chronosphere.io/scrape: "true"
        chronosphere.io/service-name: "keycloak-dev-upgraded"
        chronosphere.io/team: "poc"
      labels:
        app.kubernetes.io/name: keycloak
        app.kubernetes.io/instance: keycloak
        app: "keycloak-poc"
        component: "authentication"
        environment: "poc"
        tier: "backend"
        version: "26.1.4"
    spec:
      containers:
        - name: keycloak
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          image: "fourkitesdevelopment.azurecr.io/facility/dyf/yms-keycloak-optimized:latest"
          imagePullPolicy: Always
          command:
            - /opt/keycloak/bin/kc.sh
            - --verbose
            - start
            - --log-level=INFO,com.fk:trace
            - --optimized
          env:
            - name: KC_HTTP_RELATIVE_PATH
              value: /expkeycloak
            - name: KC_CACHE
              value: "ispn"
            - name: KC_CACHE_STACK
              value: "kubernetes"
            - name: KC_PROXY_HEADERS
              value: forwarded
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL_HOST
              value: psql-dyf-db1-flexi-dev.postgres.database.azure.com
            - name: KC_DB_URL_PORT
              value: "5432"
            - name: KC_DB_URL_DATABASE
              value: keycloak_25_0_0
            - name: KC_DB_USERNAME
              value: keycloak
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-secrets
                  key: db-password
            - name: KC_METRICS_ENABLED
              value: "true"
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_PROXY
              value: "edge"
            - name: KC_PROXY_ADDRESS_FORWARDING
              value: "true"
            - name: KC_PROXY_HEADERS
              value: xforwarded
            # - name: KC_HTTPS_ENABLED
            #   value: "true"
            # - name: KC_HTTPS_PORT
            #   value: "8443"
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_DB_SCHEMA
              value: keycloak_26_1_4
            - name: KC_FEATURES
              value: "admin-api,account-api,admin-fine-grained-authz"
            - name: KC_HOSTNAME_STRICT
              value: "false"  
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: JGROUPS_DISCOVERY_PROTOCOL
              value: dns.DNS_PING
            - name: JGROUPS_DISCOVERY_PROPERTIES
              value: "dns_query=keycloak-headless.$(KUBERNETES_NAMESPACE).svc.cluster.local"
            - name: CACHE_OWNERS_COUNT
              value: "2"
            - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
              value: "2"
            - name: KC_CACHE
              value: "ispn"
            - name: KC_CACHE_STACK
              value: "kubernetes"
            - name: JAVA_OPTS_APPEND
              value: "-Djgroups.dns.query=keycloak-headless"
            - name: KC_PROXY_ADDRESS_FORWARDING
              value: "true"
            - name: KEYCLOAK_FRONTEND_URL
              value: "https://dy-dev.fourkites.com"
            - name: FRONTEND_URL
              value: "https://dy-dev.fourkites.com"
            
          envFrom:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: 'http-internal'
              containerPort: 9000
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: '/expkeycloak/health/live'
              port: 'http-internal'
              scheme: 'HTTP'
            initialDelaySeconds: 0
            timeoutSeconds: 5
            
          readinessProbe:
            httpGet:
              path: '/expkeycloak/health/ready'
              port: 'http-internal'
              scheme: 'HTTP'
            initialDelaySeconds: 10
            timeoutSeconds: 1
            
          startupProbe:
            httpGet:
              path: '/expkeycloak/health'
              port: 'http-internal'
              scheme: 'HTTP'
            initialDelaySeconds: 15
            timeoutSeconds: 1
            failureThreshold: 60
            periodSeconds: 5
            
          resources:
            {}
          volumeMounts:
      serviceAccountName: keycloak
      securityContext:
        fsGroup: 1000
      enableServiceLinks: true
      restartPolicy: Always
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: keycloak
                  app.kubernetes.io/instance: keycloak
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: NotIn
                    values:
                      - test
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: keycloak
                    app.kubernetes.io/instance: keycloak
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: NotIn
                      values:
                        - test
                topologyKey: topology.kubernetes.io/zone
        
      terminationGracePeriodSeconds: 60
      volumes:
